---
// import ThemeToggleButton from './ThemeToggleButton.astro'; // Removed toggle button import
import logoImage from '../assets/logo.svg'; // Import logo from assets
const base = import.meta.env.BASE_URL; // Get base URL once
---

<!-- Made header completely transparent with no background color -->
<header class="transition-all duration-300 z-50 w-full absolute top-0 left-0">
  <nav class="container mx-auto px-6 py-4 flex justify-between items-center backdrop-blur-sm backdrop-filter">
    <div>
      <!-- Enhanced logo animation with glow and rotate effects -->
      <a href={base + '/'} aria-label="LogicLabs Network Početna" class="block hover:opacity-100 transition-all duration-500 ease-in-out logo-animate"> 
        <!-- Logo with special animation class -->
        <img src={logoImage.src} alt="LogicLabs Network Logo" class="h-10 w-auto filter drop-shadow-[0_0_10px_rgba(255,255,255,0.7)]"> 
      </a>
    </div>
    <div class="hidden md:flex space-x-8">
      <!-- Enhanced menu items with glow and slide effects -->
      <a href={base + '/usluge'} class="text-white nav-link-animate relative overflow-hidden">Usluge</a>
      <a href={base + '/portfolio'} class="text-white nav-link-animate relative overflow-hidden">Portfolio</a>
      <a href={base + '/o-nama'} class="text-white nav-link-animate relative overflow-hidden">O nama</a>
      <a href={base + '/usluge/cenovnik'} class="text-white nav-link-animate relative overflow-hidden">Cenovnik</a>
    </div>
    <div class="flex items-center"> 
      <!-- Contact button with pulsing effect -->
      <a href={base + '/kontakt'} class="kontakt-btn bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-6 py-3 rounded-full shadow-lg transition-all duration-500 hidden md:inline-block mr-4 hover:shadow-[0_0_20px_rgba(59,130,246,0.7)]">
        Kontakt
      </a>
      <!-- Mobile Menu Button with animated hamburger -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden focus:outline-none hamburger-btn" 
        aria-controls="mobile-menu" 
        aria-expanded="false" 
      >
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="sr-only">Otvori glavni meni</span>
      </button>
    </div>
  </nav>

  <!-- Mobile Menu with glass morphism effect -->
  <div id="mobile-menu" class="md:hidden hidden backdrop-blur-md backdrop-filter bg-black/30 shadow-2xl rounded-b-2xl overflow-hidden transition-all duration-500 ease-in-out"> 
    <a href={base + '/usluge'} class="block px-8 py-4 text-white hover:bg-white/10 transition-all duration-300 mobile-link">Usluge</a>
    <a href={base + '/portfolio'} class="block px-8 py-4 text-white hover:bg-white/10 transition-all duration-300 mobile-link">Portfolio</a>
    <a href={base + '/o-nama'} class="block px-8 py-4 text-white hover:bg-white/10 transition-all duration-300 mobile-link">O nama</a>
    <a href={base + '/usluge/cenovnik'} class="block px-8 py-4 text-white hover:bg-white/10 transition-all duration-300 mobile-link">Cenovnik</a>
    <a href={base + '/kontakt'} class="block px-8 py-4 text-white hover:bg-white/10 transition-all duration-300 mobile-link border-t border-white/20">Kontakt</a>
  </div>
</header>

<style>
/* Removed specific logo, nav-link, and kontakt-btn animations */
/* Hamburger button styling */
.hamburger-btn {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 30px;
  height: 22px;
  padding: 0;
}
.hamburger-line {
  display: block;
  width: 100%;
  height: 2px;
  background-color: white;
  transition: all 0.3s ease;
  box-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
}
.hamburger-btn:hover .hamburger-line {
  background-color: #3b82f6;
}
.hamburger-btn:hover .hamburger-line:nth-child(1) {
  transform: translateY(-3px);
}
.hamburger-btn:hover .hamburger-line:nth-child(3) {
  transform: translateY(3px);
}

/* Mobile menu link animation */
.mobile-link {
  transform: translateX(-20px);
  opacity: 0;
  transition: all 0.3s ease;
}
#mobile-menu:not(.hidden) .mobile-link {
  transform: translateX(0);
  opacity: 1;
}
#mobile-menu:not(.hidden) .mobile-link:nth-child(1) { transition-delay: 0.1s; }
#mobile-menu:not(.hidden) .mobile-link:nth-child(2) { transition-delay: 0.15s; }
#mobile-menu:not(.hidden) .mobile-link:nth-child(3) { transition-delay: 0.2s; }
#mobile-menu:not(.hidden) .mobile-link:nth-child(4) { transition-delay: 0.25s; }
#mobile-menu:not(.hidden) .mobile-link:nth-child(5) { transition-delay: 0.3s; }
</style>

<script>
  const menuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerLines = document.querySelectorAll('.hamburger-line');

  menuButton?.addEventListener('click', () => {
    const isHidden = mobileMenu?.classList.toggle('hidden');
    menuButton.setAttribute('aria-expanded', isHidden ? 'false' : 'true');
    
    // Transform hamburger into X when menu is open
    if (!isHidden) {
      // Cast to HTMLElement to access style
      (hamburgerLines[0] as HTMLElement).style.transform = 'rotate(45deg) translate(5px, 5px)';
      (hamburgerLines[1] as HTMLElement).style.opacity = '0';
      (hamburgerLines[2] as HTMLElement).style.transform = 'rotate(-45deg) translate(7px, -6px)';
    } else {
      // Cast to HTMLElement to access style
      (hamburgerLines[0] as HTMLElement).style.transform = 'none';
      (hamburgerLines[1] as HTMLElement).style.opacity = '1';
      (hamburgerLines[2] as HTMLElement).style.transform = 'none';
    }
  });

  // Close menu if clicking outside
  document.addEventListener('click', (event) => {
    const isClickInsideMenu = mobileMenu?.contains(event.target as Node);
    const isClickOnButton = menuButton?.contains(event.target as Node);

    if (!isClickInsideMenu && !isClickOnButton && !mobileMenu?.classList.contains('hidden')) {
      mobileMenu?.classList.add('hidden');
      menuButton?.setAttribute('aria-expanded', 'false');
      
      // Reset hamburger icon
      hamburgerLines.forEach(line => {
        // Cast to HTMLElement to access style
        (line as HTMLElement).style.transform = 'none';
        (line as HTMLElement).style.opacity = '1';
      });
    }
  });

  // Add scroll-based header transparency adjustment
  let lastScrollTop = 0;
  const header = document.querySelector('header');
  
  window.addEventListener('scroll', () => {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
    if (scrollTop > 100) {
      // Make header slightly visible on scroll down
      header?.classList.add('backdrop-blur-md');
      header?.classList.add('backdrop-filter');
      header?.classList.add('bg-black/20');
    } else {
      // Make header fully transparent at top
      header?.classList.remove('backdrop-blur-md');
      header?.classList.remove('backdrop-filter');
      header?.classList.remove('bg-black/20');
    }
    
    lastScrollTop = scrollTop;
  });
</script>
